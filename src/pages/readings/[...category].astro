---
import Layout from "@/layouts/Layout.astro";
import Readings from "@/components/Readings.astro";
import TwoColumnView from "@/components/views/TwoColumnView.astro";
import Back from "@/components/elements/Back.astro";
import FilterCategories from "@/components/FilterCategories.astro";
import FilterSubjects from "@/components/FilterSubjects.astro";
import FilterTopics from "@/components/FilterTopics.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const readings = await getCollection("readings");
  const categories = [
    ...new Set(readings.map((reading) => reading.data.category)),
  ];

  const paths = [
    {
      params: { category: undefined },
    },
    ...categories.map((cat) => ({
      params: { category: cat.replace(/ /g, "_") },
    })),
  ];

  // Add category/subject paths
  for (const cat of categories) {
    const categoryReadings = readings.filter((reading) => reading.data.category === cat);
    const subjects = [...new Set(categoryReadings.map((reading) => reading.data.subject).filter(Boolean))];
    
    for (const subject of subjects) {
      paths.push({
        params: { 
          category: `${cat.replace(/ /g, "_")}/${subject.replace(/ /g, "_")}` 
        },
      });

      // Add category/subject/topic paths
      const subjectReadings = categoryReadings.filter((reading) => reading.data.subject === subject);
      const topics = [...new Set(subjectReadings.map((reading) => reading.data.topic).filter(Boolean))];
      
      for (const topic of topics) {
        paths.push({
          params: { 
            category: `${cat.replace(/ /g, "_")}/${subject.replace(/ /g, "_")}/${topic.replace(/ /g, "_")}` 
          },
        });
      }
    }
  }

  return paths;
}

const { category: urlPath } = Astro.params;
const pathParts = urlPath ? urlPath.split('/') : [];
const category = pathParts[0] ? pathParts[0].replace(/_/g, " ") : undefined;
const subject = pathParts[1] ? pathParts[1].replace(/_/g, " ") : undefined;
const topic = pathParts[2] ? pathParts[2].replace(/_/g, " ") : undefined;
---

<Layout>
  <TwoColumnView>
    <div slot="sidebar">
      <Back href="/" label="Home" />
      <div
        class="text-3xl md:text-4xl font-light text-gray-700 italic leading-tight font-[Crimson_Text] text-center lg:text-left flex justify-center lg:justify-start"
      >
        Things I've read
      </div>

      <FilterCategories currentCategory={category} />
      <FilterSubjects currentCategory={category} currentSubject={subject} />
      <FilterTopics currentCategory={category} currentSubject={subject} currentTopic={topic} />
    </div>

    <div slot="main">
      <div class="flex flex-wrap gap-5">
        <Readings category={category} subject={subject} topic={topic} />
      </div>
    </div>
  </TwoColumnView>
</Layout>
