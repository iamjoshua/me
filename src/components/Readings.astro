---
import { getCollection } from "astro:content";
import ReadingCard from "./ReadingCard.astro";
import AnimateOnLoad from "./AnimateOnLoad.astro";

interface Props {
  limit?: number;
  category?: string;
  subject?: string;
  topic?: string;
}

const { limit, category, subject, topic } = Astro.props;

let readings = await getCollection("readings");

if (category) {
  readings = readings.filter(reading => reading.data.category === category);
}

if (subject) {
  readings = readings.filter(reading => reading.data.subject === subject);
}

if (topic) {
  readings = readings.filter(reading => reading.data.topic === topic);
}

if (limit) {
  readings = readings.slice(0, limit);
}

let lastDelay = 0;
let incr = 0.05;
const nextDelay = () => {
  const delay = lastDelay;
  lastDelay = lastDelay + incr;
  incr = incr - 0.001;
  return delay;
};
---

{
  readings.map((reading, index) => (
    <AnimateOnLoad
      type="slideUp"
      delay={nextDelay()}
      class="motion-preset-fade reading-item"
    >
      <ReadingCard {...reading.data} />
    </AnimateOnLoad>
  ))
}
