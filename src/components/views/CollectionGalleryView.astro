---
interface Props {
  title: string;
  subtitle?: string;
  coverImageUrl?: string;
  photos?: Array<{
    id: string;
    data: {
      filename: string;
      title: string;
      imageUrl: string;
      path: string;
    };
  }>;
}

const { title, subtitle = "", coverImageUrl = "", photos = [] } = Astro.props as Props;
---

<section class="w-full">
  <div class="relative w-full h-[60vh] md:h-[70vh]">
    {coverImageUrl && (
      <img
        src={coverImageUrl}
        alt={title}
        class="absolute inset-0 w-full h-full object-cover"
        decoding="async"
        fetchpriority="high"
      />
    )}
    <div class="absolute inset-0 bg-gradient-to-t from-white/70 via-white/40 to-transparent"></div>
    <div class="absolute bottom-0 left-0 right-0 p-6 md:p-10">
      <h1 class="text-3xl md:text-5xl font-light italic font-[Crimson_Text] text-gray-800">{title}</h1>
      {subtitle && (
        <p class="mt-2 text-gray-600 text-base md:text-lg">{subtitle}</p>
      )}
    </div>
  </div>

  <div class="container mx-auto px-4 md:px-8 py-10">
    <div class="c2-gallery">
      <ul>
        {photos.map((photo) => (
          <li>
            <a href={`/photography/p/${photo.id}`}>
              <figure>
                <img src={photo.data.imageUrl} alt={photo.data.title} loading="lazy" decoding="async" />
                <figcaption>{photo.data.title}</figcaption>
              </figure>
            </a>
          </li>
        ))}
      </ul>
    </div>
  </div>

  <style>
    .c2-gallery * { box-sizing: border-box; }
    .c2-gallery img {
      width: 100%;
      display: block;
      transition: transform 1000ms;
    }
    .c2-gallery ul {
      list-style: none;
      margin: 0;
      padding: 0;
      display: grid;
      gap: 0.5rem;
      grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));
      max-width: 100%;
      width: 70rem;
      margin-left: auto;
      margin-right: auto;
    }
    .c2-gallery figure {
      margin: 0;
      position: relative;
      overflow: hidden;
    }
    .c2-gallery figure::after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 200%;
      height: 200%;
      background: rgba(0, 0, 0, 0.5);
      transform-origin: center;
      opacity: 0;
      transform: scale(2);
      transition: opacity 300ms;
    }
    .c2-gallery figcaption {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: flex;
      justify-content: center;
      place-items: center;
      text-align: center;
      padding: 1rem;
      color: white;
      font-size: 1.2rem;
      z-index: 1;
      opacity: 0;
      transition: opacity 600ms, transform 600ms;
    }
    .c2-gallery a:is(:hover, :focus) figure::after { opacity: 1; }
    .c2-gallery a:is(:hover, :focus) figcaption {
      opacity: 1;
      transition: opacity 600ms;
    }
    @media (prefers-reduced-motion: no-preference) {
      .c2-gallery figcaption { transform: translate3d(0, 2rem, 0); }
      .c2-gallery figure::after {
        border-radius: 50%;
        opacity: 1;
        transform: scale(0);
        transition: transform 900ms;
      }
      .c2-gallery a:is(:hover, :focus) figure::after { transform: scale(2.5); }
      .c2-gallery a:is(:hover, :focus) figcaption {
        opacity: 1;
        transform: translate3d(0, 0, 0);
        transition: opacity 600ms 400ms, transform 600ms 400ms;
      }
      .c2-gallery a:is(:hover, :focus) img { transform: scale(1.2); }
    }
  </style>
</section>
